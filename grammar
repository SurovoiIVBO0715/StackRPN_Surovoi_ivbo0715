lang ->expr*
expr -> WHILE while_expr | INIT assign_expr | VAR set_expr
while_expr -> condition body
condition -> LPAR log_expr RPAR
log_expr -> value LOGOP value
body -> LBRACE body_expr RBRACE
body_expr -> assign_expr* | while_expr*
assign_expr -> VAR ASSIGN value_expr EOL
value_expr -> value (OP value)* EOL
value -> NUM | VAR
set_expr -> TYPE SET EOL | ADD value EOL | REMOVE value EOL | CONTAINS value EOL

TYPE -> type?
SET -> set?
ADD -> add?
REMOVE -> remove?
CONTAINS -> contains?
INIT -> int?
WHILE -> while?
LBRACE -> {
PBRACE -> }
EOL -> ;
WS -> \t | \r | \n
VAR -> [a-zA-Z]+
NUM -> 0 | [1-9][0-9]*
LPAR -> (
RPAR -> )
MULDIV -> * | /
ADDSUB -> + | -
LOGOP -> != | == | <= | >= | < | >
ASSIGN -> =

